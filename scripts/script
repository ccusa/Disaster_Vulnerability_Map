library(dplyr)
library(magrittr)
library(rgdal)

# CDC data. Available at https://svi.cdc.gov/SVIDataToolsDownload.html
# replace User/Phil/DataKind/ with the path to the data on your machine
cdc_data <- readOGR(dsn = "/Users/Phil/DataKind/Shapefiles/County", layer = "SVI2014_US_CNTY", stringsAsFactors = F)

# Disaster likelyhood by fips. Available if you have accest to proprietary data
# replace User/Phil/DataKind/ with the path to the data on your machine
hazard_data <- read.csv("/Users/Phil/DataKind/hazard_data/hazard.csv",stringsAsFactors = F, colClasses = c("FIPS" = "character"))

# remove NA's from hazard data
hazard_data <- na.omit(hazard_data)
  
# join hazard data to shapefile
merge_data <- merge(cdc_data, hazard_data, by.x="FIPS", by.y="FIPS", all.x=T)

# getting data as data frame
county <- merge_data@data

# removing columns we don't need to keep the shapefile smaller
county <- county %>% select(F_TOTAL,
                  starts_with('F_THEME'),
                  contains('Risk')) %>%
  # set null values created by join to 0
  mutate(Total.Natural.Hazard.Risk.Index = ifelse(is.na(Total.Natural.Hazard.Risk.Index),0,Total.Natural.Hazard.Risk.Index)) %>%
  mutate(Earthquake.Risk.Index = ifelse(is.na(Earthquake.Risk.Index),0,Earthquake.Risk.Index)) %>%
  mutate(Tornado.Risk.Index = ifelse(is.na(Tornado.Risk.Index),0,Tornado.Risk.Index)) %>%
  mutate(Hail.Risk.Index = ifelse(is.na(Hail.Risk.Index),0,Hail.Risk.Index)) %>%
  mutate(Hurricane.Storm.Surge.Risk.Index = ifelse(is.na(Hurricane.Storm.Surge.Risk.Index),0,Hurricane.Storm.Surge.Risk.Index)) %>%
  mutate(Flood.Risk.Index = ifelse(is.na(Flood.Risk.Index),0,Flood.Risk.Index)) %>%
  mutate(Wildfire.Risk.Index = ifelse(is.na(Wildfire.Risk.Index),0,Wildfire.Risk.Index))

# setting it back to a large SpatialPolygonsDataframe
merge_data@data <- county

# replace User/Phil/DataKind/Shapefiles with the path to your desired directory. 
# counties can be replaced with whatever name you'd like
writeOGR(merge_data, dsn="/Users/Phil/DataKind/Shapefiles/merge", layer="counties", driver="ESRI Shapefile", overwrite_layer = T)

## tract file reduction
svi <- readOGR("/Users/Phil/DataKind/Shapefiles/Tract", stringsAsFactors = F)
tract <- svi@data

# removing columns we don't need to keep the shapefile smaller
tract <- tract %>% select(F_TOTAL,
                  starts_with('F_THEME'))
svi@data <- tract

# replace User/Phil/DataKind/Shapefiles with the path to your desired directory. 
# counties can be replaced with whatever name you'd like
writeOGR(svi, dsn="/Users/Phil/DataKind/Shapefiles/merge", layer="tracts", driver="ESRI Shapefile", overwrite_layer = T)
